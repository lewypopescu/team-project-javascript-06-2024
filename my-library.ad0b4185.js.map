{"mappings":"iiBAAA,IAAAA,EAAAC,EAAA,S,aCAAC,SAASC,iBAAiB,oBAAoB,WAC5C,IAAMC,EAAiBF,SAASG,iBAAiB,iBAC7CC,EAAoB,EAClBC,EAAcH,EAAeI,OAGjC,SAAOC,EAAUC,GAEhBN,EAAcO,SAAQ,SAACC,EAAKC,GAEvBA,IAAMH,EACRE,EAAIE,UAAUC,IAAI,UAEfH,EAACE,UAAUE,OAAO,S,IAa1BC,aAPC,WAGAR,EADGH,GAAkBA,EAAoB,GAAKC,E,GAKzB,KAGvBE,EAAUH,E,wDDtBNY,EAAiBhB,SAASiB,cAAc,mBAiB9C,SAASC,EAAcC,GACrB,IAAMC,EAASC,KAAKC,MAAMC,aAAaC,QAAQL,KAAa,GAG5D,GAAsB,IAAlBC,EAAOd,OAAX,CAKA,IAAMmB,EAASL,EACZM,KAAI,SAAAC,GACH,MAAO,gEAIHC,OAFmBD,EAAME,GAAG,kEAGpBD,OAdK,kCAaED,EAAMG,YACtB,WAGyBF,OAHhBD,EAAMI,MAAM,mGAISH,OADLD,EAAMI,MAAM,+CAGjBH,OAFUD,EAAMK,OAChCN,KAAI,SAAAO,G,OAASA,EAAMC,I,IACnBC,KAAK,MAAM,OAAsCP,OAAjCD,EAAMS,aAAaC,MAAM,KAAK,GAAG,2C,IAKzDF,KAAK,IAERnB,EAAesB,UAAYb,EAE3BzB,SAASG,iBAAiB,gBAAgBM,SAAQ,SAAA8B,GACjB,I,EAA/BA,EAAOtC,iBAAiB,S,EAASuC,EAAA1C,EAAA,CAAA0C,EAAAC,GAAAC,MAAA,SAAAC,EAAMC,G,IAE/Bf,E,yEADNe,EAAMC,iBACAhB,EAAKe,EAAME,cAAcC,aAAa,W,UACtC,EAAAC,EAAAC,WAAUpB,G,oDAHqBe,G,0CA3BvCJ,EAAAU,GAASC,OAAOC,KAAK,gBAAwBxB,OAART,G,CAnBV,qBAA7BkC,OAAOC,SAASC,UACa,2BAA7BF,OAAOC,SAASC,UAEhBrC,EAAc,WAGhBlB,SAASiB,cAAc,gBAAgBhB,iBAAiB,SAAS,WAC/DiB,EAAc,U,IAGhBlB,SAASiB,cAAc,cAAchB,iBAAiB,SAAS,WAC7DiB,EAAc,Q","sources":["src/my-library.js","src/js/carousel.js"],"sourcesContent":["import './js/carousel';\nimport './js/footer.js';\nimport './js/dark-mode';\n\nimport axios from 'axios';\nimport Notiflix from 'notiflix';\n\nconst galleryLibrary = document.querySelector('.galleryLibrary');\n\nif (\n  window.location.pathname === '/my-library.html' ||\n  window.location.pathname === '/team6/my-library.html'\n) {\n  displayMovies('watched');\n}\n\ndocument.querySelector('.watched-btn').addEventListener('click', () => {\n  displayMovies('watched');\n});\n\ndocument.querySelector('.queue-btn').addEventListener('click', () => {\n  displayMovies('queue');\n});\n\nfunction displayMovies(section) {\n  const movies = JSON.parse(localStorage.getItem(section)) || [];\n  const BASE_IMG_URL = 'https://image.tmdb.org/t/p/w500';\n\n  if (movies.length === 0) {\n    Notiflix.Notify.info(`No movies in ${section}`);\n    return;\n  }\n\n  const markup = movies\n    .map(movie => {\n      return `\n      <div class=\"div-poster\">\n      <a href=\"#\" data-id=\"${movie.id}\" class=\"poster-link\">\n        <img class=\"poster-card\" src=\"${\n          BASE_IMG_URL + movie.poster_path\n        }\" alt=\"${movie.title}\" loading=\"lazy\" />\n        </a>\n        <div class=\"info\">\n          <p class=\"info-title\">${movie.title}</p>\n          <p class=\"info-genre-year\">${movie.genres\n            .map(genre => genre.name)\n            .join(', ')} | ${movie.release_date.split('-')[0]}</p>\n        </div>\n      </div>\n    `;\n    })\n    .join('');\n\n  galleryLibrary.innerHTML = markup;\n\n  document.querySelectorAll('.poster-link').forEach(poster => {\n    poster.addEventListener('click', async event => {\n      event.preventDefault();\n      const id = event.currentTarget.getAttribute('data-id');\n      await openModal(id);\n    });\n  });\n}\n\nimport { openModal } from './js/modal.js';\n","document.addEventListener('DOMContentLoaded', function () {\n  const carouselImages = document.querySelectorAll('.carousel-img');\n  let currentImageIndex = 0;\n  const totalImages = carouselImages.length;\n\n  // Funcție pentru afișarea unei imagini din carusel\n  function showImage(index) {\n    // Iterăm prin toate imaginile caruselului\n    carouselImages.forEach((img, i) => {\n      // Verificăm dacă indexul imaginii curente coincide cu indexul dat\n      if (i === index) {\n        img.classList.add('active'); // Afișăm imaginea curentă\n      } else {\n        img.classList.remove('active'); // Ascundem celelalte imagini\n      }\n    });\n  }\n\n  // Funcție pentru a avansa la următoarea imagine din carusel\n  function nextImage() {\n    // Incrementăm indexul imaginii curente și revenim la prima imagine după ultima\n    currentImageIndex = (currentImageIndex + 1) % totalImages;\n    showImage(currentImageIndex);\n  }\n\n  // Setăm un interval pentru a schimba imaginea la fiecare 4 secunde\n  setInterval(nextImage, 4000);\n\n  // Afișăm imaginea curentă la încărcarea paginii\n  showImage(currentImageIndex);\n});\n"],"names":["$bpxeT","parcelRequire","document","addEventListener","carouselImages","querySelectorAll","currentImageIndex","totalImages","length","showImage","index","forEach","img","i","classList","add","remove","setInterval","$865c390aa2d1ad34$var$galleryLibrary","querySelector","$865c390aa2d1ad34$var$displayMovies","section","movies","JSON","parse","localStorage","getItem","markup","map","movie","concat","id","poster_path","title","genres","genre","name","join","release_date","split","innerHTML","poster","$parcel$interopDefault","$2TvXO","mark","_callee","event","preventDefault","currentTarget","getAttribute","$5xtVg","openModal","$ejkSG","Notify","info","window","location","pathname"],"version":3,"file":"my-library.ad0b4185.js.map"}